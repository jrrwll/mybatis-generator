<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="$mapper_package.$mapper_name">

  <resultMap id="BaseResultMap" type="$result_map">
$result_map_id_list
$result_map_result_list
  </resultMap>

  <sql id="table_name">
    $table_name
  </sql>

  <sql id="base_column_list">
    $select_column_list
  </sql>

  <sql id="where_criteria">
    <where>
      <foreach collection="criteriaList" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach open="(" close=")" collection="criterion.value" item="listItem" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="update_where_criteria">
    <where>
      <foreach collection="condition.criteriaList" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach open="(" close=")" collection="criterion.value" item="listItem" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <insert id="insert" parameterType="$result_map">
    insert into
    <include refid="table_name"/>
    ($insert_column_list)
    values ($insert_column_value_list)
  </insert>

  <insert id="insertSelective" parameterType="$result_map">
    insert into
    <include refid="table_name"/>
    <trim prefix="(" suffix=")" suffixOverrides=",">
$if_test_column_list
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
$if_test_column_value_list
    </trim>
  </insert>

  <insert id="batchInsert" parameterType="$result_map">
    insert into
    <include refid="table_name"/>
    <trim prefix="(" suffix=")" suffixOverrides=",">
      $insert_column_list
    </trim>
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (
      <trim suffixOverrides=",">
        $batch_insert_column_value_list
      </trim>
      )
    </foreach>
  </insert>

  <delete id="delete">
    delete from
    <include refid="table_name"/>
    where $primary_key_eq_list
  </delete>

  <delete id="deleteBy">
    delete from
    <include refid="table_name"/>
    <if test="_parameter != null">
      <include refid="where_criteria"/>
    </if>
    <if test="limit != 0">
      limit #{limit}
    </if>
  </delete>

  <select id="select" resultMap="BaseResultMap">
    select
    <include refid="base_column_list"/>
    from
    <include refid="table_name"/>
    where $primary_key_eq_list
  </select>

  <select id="selectBy" resultMap="BaseResultMap">
    select
    <include refid="base_column_list"/>
    from
    <include refid="table_name"/>
    <if test="_parameter != null">
      <include refid="where_criteria"/>
    </if>
    <if test="orderBy != null">
      order by #{orderBy}
    </if>
    <if test="limit != 0">
      limit #{limit} c #{offset}
    </if>
  </select>

  <select id="countBy" resultType="java.lang.Long">
    select count(*) from
    <include refid="table_name"/>
    <if test="_parameter != null">
      <include refid="where_criteria"/>
    </if>
  </select>

  <update id="update" parameterType="$result_map">
    update
    <include refid="table_name"/>
    set $update_column_value_list
    where $primary_key_eq_list
  </update>

  <update id="updateSelective" parameterType="$result_map">
    update
    <include refid="table_name"/>
    <set>
$update_if_test_column_value_list
    </set>
    where $primary_key_eq_list
  </update>

  <update id="updateBy">
    update
    <include refid="table_name"/>
    set
      $update_by_column_value_list
    <if test="condition != null">
      <include refid="update_where_criteria"/>
    </if>
  </update>

  <update id="updateSelectiveBy">
    update
    <include refid="table_name"/>
    <set>
$update_by_if_test_column_value_list
    </set>
    <if test="condition != null">
      <include refid="update_where_criteria"/>
    </if>
  </update>

</mapper>
